# Generated by Django 5.0.1 on 2024-03-30 07:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.CharField(max_length=50, null=True)),
                ('productprice', models.PositiveIntegerField(null=True)),
                ('productquantity', models.PositiveIntegerField(null=True)),
                ('filedata', models.FileField(upload_to='static/products')),
                ('owneremail', models.EmailField(max_length=254, null=True)),
                ('today_date', models.DateField(null=True)),
                ('product_desc', models.TextField(max_length=100, null=True)),
                ('actualauantity', models.PositiveIntegerField(null=True)),
                ('rentamount', models.PositiveIntegerField(null=True)),
                ('communityname', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'AddProducts',
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communityname', models.CharField(max_length=100, null=True)),
                ('communitydescription', models.CharField(max_length=100, null=True)),
                ('Communitytype', models.CharField(max_length=100, null=True)),
                ('owneremail', models.EmailField(max_length=50, null=True)),
                ('today_date', models.DateField(null=True)),
                ('status', models.CharField(default='pending', max_length=50)),
            ],
            options={
                'db_table': 'Community',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CommunityId', models.CharField(max_length=100, null=True)),
                ('communityname', models.CharField(max_length=100, null=True)),
                ('communitydescription', models.CharField(max_length=100, null=True)),
                ('Communitytype', models.CharField(max_length=100, null=True)),
                ('owneremail', models.EmailField(max_length=50, null=True)),
                ('today_date', models.DateField(null=True)),
                ('username', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=50, null=True)),
                ('status', models.CharField(default='pending', max_length=50)),
            ],
            options={
                'db_table': 'Member',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Productid', models.CharField(max_length=100, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('cardname', models.CharField(max_length=50, null=True)),
                ('cardnumber', models.CharField(max_length=16, null=True)),
                ('cvv', models.CharField(max_length=3, null=True)),
                ('totalprice', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'Payment',
            },
        ),
        migrations.CreateModel(
            name='RentAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProductId', models.CharField(max_length=100, null=True)),
                ('useremail', models.EmailField(max_length=254, null=True)),
                ('bookname', models.CharField(max_length=50, null=True)),
                ('owneremail', models.CharField(max_length=100, null=True)),
                ('rentamount', models.PositiveIntegerField(default=0, null=True)),
                ('number', models.CharField(default='pending', max_length=100)),
                ('status', models.CharField(default='pending', max_length=20)),
            ],
            options={
                'db_table': 'RentAmount',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, null=True)),
                ('useremail', models.EmailField(max_length=254, null=True)),
                ('password', models.CharField(max_length=100, null=True)),
                ('contact', models.CharField(max_length=100, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('photo', models.FileField(upload_to='static/products')),
                ('status', models.FileField(default='pending', null=True, upload_to='')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='UserOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_Id', models.CharField(max_length=50, null=True)),
                ('productname', models.CharField(max_length=50, null=True)),
                ('productprice', models.PositiveIntegerField(null=True)),
                ('productquantity', models.PositiveIntegerField(null=True)),
                ('filedata', models.FileField(max_length=50, null=True, upload_to='')),
                ('user_email', models.EmailField(max_length=50, null=True)),
                ('product_cost', models.PositiveIntegerField(null=True)),
                ('user_order_count', models.PositiveIntegerField(null=True)),
                ('user_product_cost', models.PositiveIntegerField(null=True)),
                ('owneremail', models.EmailField(max_length=254, null=True)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('paymenttype', models.CharField(default='pending', max_length=50)),
            ],
            options={
                'db_table': 'UserOrder',
            },
        ),
    ]
